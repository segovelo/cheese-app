[{"C:\\Users\\sebas\\Year_3\\Web-Development\\React\\cheese-app\\src\\App.js":"1","C:\\Users\\sebas\\Year_3\\Web-Development\\React\\cheese-app\\src\\reportWebVitals.js":"2","C:\\Users\\sebas\\Year_3\\Web-Development\\React\\cheese-app\\src\\cheese-names.js":"3","C:\\Users\\sebas\\Year_3\\Web-Development\\React\\cheese-app\\src\\scrollArrow.js":"4","C:\\Users\\sebas\\Year_3\\Web-Development\\GitHub-Clones\\cheese-app\\src\\App.js":"5","C:\\Users\\sebas\\Year_3\\Web-Development\\GitHub-Clones\\cheese-app\\src\\reportWebVitals.js":"6"},{"size":5158,"mtime":1609368559993,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1607150874885,"results":"9","hashOfConfig":"8"},{"size":10071,"mtime":1609291422608,"results":"10","hashOfConfig":"8"},{"size":865,"mtime":1609303439132,"results":"11","hashOfConfig":"8"},{"size":4617,"mtime":1612132647419,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1607150874885,"results":"14","hashOfConfig":"13"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"1doeao7",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ap6kyo",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sebas\\Year_3\\Web-Development\\React\\cheese-app\\src\\App.js",["28","29"],"import React,{ useState } from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport PText from 'react-predictive-text';\nimport cheeseImg from './images/cheese.jpg';\nimport { BrowserRouter} from 'react-router-dom';\nimport cheese_names_array from './cheese-names';\nimport ScrollArrow from './scrollArrow';\nimport prof_pic from \"./images/prof_pic2.png\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css';\nimport './website.css';\n\nconst App = () => {\n  const [cheeses, setCheeses]= React.useState([]);\n  const [selected, setSelected]= React.useState('');\n  const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n  const url = \"https://9ofhfkvsec.execute-api.us-east-2.amazonaws.com/latest/cheeses\";\n  React.useEffect( () => {\n    fetch(proxyurl+url)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        setCheeses(data);\n      })\n      .catch(() => console.log(\"Can’t access \" + url + \" response. Blocked by browser?\"));\n   }, []  );  // Notice the dependecy array\n    \n\n  let letter = '';\n  const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n  const links = [];\n  letters.map(letter => (\n        links.push('/#'.concat(letter)) \n  ));  \n\n\n\n  return (\n    <>\n      <div id=\"container\">\n      <ScrollArrow/>\n       <header>  {/*<!-- Header element -->  */}\n         <img id=\"prof_pic\" src={prof_pic} alt=\"Profile photo of Sebastian\" width=\"150\" height=\"150\"/>\n         <div id=\"divHeader\"><h1>Sebastian Vergara Website</h1></div>\n       </header> {/* <!-- ****************  End of \"header\" *************  --> */}\n\n    <nav>   {/*  \"Nav\" element to group website navigation buttons */}\n      <ul>    { /*  unordered List to       */}\n           <li><a href=\"https://www.segovelo.com\" title=\"About Sebastian\">About Me</a></li>\n           <li><a href=\"https://www.segovelo.com/eportfolio_1\" title=\"Programming and computer systems fundamentals units\">e-Portfolio 1</a></li>\n           <li><a href=\"https://www.segovelo.com/eportfolio_2\" title=\"Web design and information systems units\">e-Portfolio 2</a></li>\n           <li><a href=\"https://www.segovelo.com/personal_development\" title=\"Personal development\">Personal Development</a></li>\n           <li><a href=\"https://www.segovelo.com/react_web_apps\" title=\"React Web Apps\">React Web Apps</a></li>\n      </ul>\n    </nav>   {/*  ***************  End of \"nav\" ********************** */}\n\n    <div className='outer-container'>\n    <div className=\"inner-container\">\n       \n    <div  className=\"div-links\">\n      <BrowserRouter>\n      { letters.map( letter => (\n            <Link to ={links[letters.indexOf(letter)]} className=\"link-letters\">{letter}</Link>\n        ))\n      }\n     </BrowserRouter>\n    </div>\n\n\n\n    <div className=\"div-predictive-text\">\n     <div className=\"inner-div-predictive\">\n        <PText \n          options = {cheese_names_array}          \n          onSelect={(cheese) => setSelected(cheese) }          \n          optionColor={'#95C8D8'}\n          optionStyles={{size : '20px'}}\n          textStyles = {{ width: '200px'}}\n          wrapperStyles={{padding:'5px', margin:'10px',\n                          display:'inline'\n                }}\n        \n        />\n      \n        <BrowserRouter>\n        <Link to = {'/#'.concat(selected.toLowerCase().split(' ').join('-'))} className=\"link-cheeses\">\n          {'Search'}\n        </Link>\n        </BrowserRouter>\n    </div>\n    </div>\n\n\n    <div className=\"cheeses-div\">     \n      {cheeses.map( cheese => (\n                <div id={cheese.name.toLowerCase().split(' ').join('-')}>\n                  {\n                    (letter !== cheese.name.substring(0,1)) &&  \n                    (letter = cheese.name.substring(0,1) ) &&                                       \n                    <p className=\"p-letter\" id={letter}> \n                       {letter}\n                    </p>    \n                  }                \n                <CheeseCard \n                  name={cheese.name}\n                  description={cheese.description}\n                  image={cheese.image}\n                />\n               </div>\n                )\n      \n      )}\n    </div>\n    </div>\n\n    <footer>\n        <h1>I would rather lose myself in passion than lose my passion</h1>\n        <h3>Jacques Mayol</h3>\n        <p>Last Update: 1st January 2021 </p>\n    </footer>   {/* <!-- ********* End of footer ************** --> */}\n    </div>\n    </div>\n     </>\n  ); \n\n};\n \n\n\nconst CheeseCard = props => {\n  const [show, setShow] = React.useState(false);\n    return(\n      <div>\n       <div className=\"div-button\">    \n       <button className=\"button-name\"\n       onClick={() => {setShow(!show)}}>\n        <p className=\"p-name\"> {props.name} </p>\n     </button>\n     </div>\n     \n    {show &&\n      <div className=\"div-description\">\n        <div>\n          <img className=\"cheese-img\" src={props.image} onError={(e)=>{e.target.onerror = null; e.target.src=cheeseImg; e.target.alt=\"Not actual image of cheese\"}} alt={props.name}/>\n        </div>\n        <p className=\"p-description\">{props.description}</p>\n      </div>\n    }\n    </div>\n    );\n};\n\nexport default App;\n","C:\\Users\\sebas\\Year_3\\Web-Development\\React\\cheese-app\\src\\reportWebVitals.js",[],"C:\\Users\\sebas\\Year_3\\Web-Development\\React\\cheese-app\\src\\cheese-names.js",[],"C:\\Users\\sebas\\Year_3\\Web-Development\\React\\cheese-app\\src\\scrollArrow.js",["30","31","32"],"C:\\Users\\sebas\\Year_3\\Web-Development\\GitHub-Clones\\cheese-app\\src\\App.js",["33","34"],"C:\\Users\\sebas\\Year_3\\Web-Development\\GitHub-Clones\\cheese-app\\src\\reportWebVitals.js",[],{"ruleId":"35","severity":1,"message":"36","line":1,"column":16,"nodeType":"37","messageId":"38","endLine":1,"endColumn":24},{"ruleId":"39","severity":1,"message":"40","line":43,"column":10,"nodeType":"41","endLine":43,"endColumn":103},{"ruleId":"35","severity":1,"message":"42","line":3,"column":9,"nodeType":"37","messageId":"38","endLine":3,"endColumn":28},{"ruleId":"35","severity":1,"message":"43","line":4,"column":9,"nodeType":"37","messageId":"38","endLine":4,"endColumn":13},{"ruleId":"35","severity":1,"message":"44","line":5,"column":9,"nodeType":"37","messageId":"38","endLine":5,"endColumn":18},{"ruleId":"35","severity":1,"message":"36","line":1,"column":16,"nodeType":"37","messageId":"38","endLine":1,"endColumn":24},{"ruleId":"35","severity":1,"message":"45","line":16,"column":9,"nodeType":"37","messageId":"38","endLine":16,"endColumn":17},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'RiArrowUpCircleFill' is defined but never used.","'FcUp' is defined but never used.","'ImArrowUp' is defined but never used.","'proxyurl' is assigned a value but never used."]